http {

  # convert mimetypes manually
  # types {
  #   text/css  css;
  #   text/html html;
  # }

  # convert mimetypes automaticly
  include mime.types;

  # prepare for use loadbalancer and port was setup with docker
  upstream backendserver {
    server 127.0.0.1:1111;
    server 127.0.0.1:2222;
    server 127.0.0.1:3333;
  }

  # set up nginx server
  server {
    listen 8010; # listen directive port
    root /Programming/Learn/nginx/mysite; # what we want to serve

    # like return syntaks, but not replace url
    rewrite ^/number/(\w+) /count/$1;

    # if the user hit, it will forward to another port was setup in above (load balancer) 
    location / {
      proxy_pass http://backendserver/;
    }

    # regular expression
    location ~* /count/[0-9] { 
      root /Programming/Learn/nginx/mysite;
      try_files /index.html =404;
    }

    # specify url
    location /fruits { 
      root /Programming/Learn/nginx/mysite;
    }
    
    location /carbs { 
      alias /Programming/Learn/nginx/mysite/fruits;
    }
    
    location /vegetables { 
      root /Programming/Learn/nginx/mysite;
      
      #specify a bunch of different directories to try, if not exists, go to index.html, if not found again, show error
      try_files /vegetables/vegies.html /index.html =400;
    }

    # redirected url with return syntaks and change url
    location /crops {
      return 307 /fruits;
    }
  }
}

events {}